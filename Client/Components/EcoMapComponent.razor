@using BlazorLeaflet
@using BlazorLeaflet.Models
@using BrowserInterop.Geolocation
@using Reciclaje.Info.Client.Services
@using System.Drawing
@using System.Globalization

@inject IJSRuntime jsRuntime
@inject ISnackbar Snackbar
@inject IDialogService dialogService
@inject IGeolocationService geoService


<MudPaper Elevation="1" Class="pa-2" Style="height:550px; width:100%;">
	<LeafletMap Map="_map"  />    
</MudPaper>

@code {
	
	[Parameter] public GeoAtomDto? GeoDatos { get; set; }
	private Map? _map;	
	private LatLng location = new LatLng();
	private GeolocationResult? geolocalizacion = new GeolocationResult();

	
	


	protected override async Task OnInitializedAsync()
	{

		//40.42094223941673, -3.688429841397024
		location = new LatLng() { Lat = 40.42094223941673F, Lng = -3.688429841397024F }; 
			
		
		_map = new Map(jsRuntime)
			{
				Center = location,				
				Zoom =16f				
			};

		_map.OnInitialized += () =>
		{
			_map.AddLayer(new TileLayer
				{
					UrlTemplate = "https://a.tile.openstreetmap.org/{z}/{x}/{y}.png",
					Attribution = "&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors. Reciclaje",
				});
			
		};




		Snackbar.Clear();
		@if (GeoDatos != null && GeoDatos.entries.Any())
		{
			Snackbar.Add(string.Format("Total de elementos geolozalizados: {0}",GeoDatos.entries.Count()), Severity.Success);
		}
		else
		{
			Snackbar.Add(string.Format("Opps! No hemos logrado recuperar información del conjunto de datos abiertos!"), Severity.Error);
		}



		geolocalizacion =  await geoService.GetCurrentPosition();
		//40.47469489936393, -3.583934566245661

		if (geolocalizacion!.Error?.Code > 0)
		{
			ShowDialogError(geolocalizacion);		}
		else
		{
			location = new LatLng() { Lat = (float)geolocalizacion.Location.Coords.Latitude, Lng = (float)geolocalizacion.Location.Coords.Longitude};

		}



		var _circle = new Circle
            {
                Position = location,
                Radius = 10f,
                Popup = new Popup
                {
                     Content = "Tu dispositivo esta aquí!"
                }

            };

		var _markerCurrentLocation = new Marker(location)
        {
            Draggable = true,
            Title = "Posición Dispositivo",
            Popup = new Popup { Content = string.Format("Tu localización es: {0:0.00}° lat, {1:0.00}° lng", location.Lat, location.Lng) },
            Tooltip = new Tooltip { Content = "Tu dispositivo esta aquí!" }

        };
		_map.AddLayer(_circle);
		_map.AddLayer(_markerCurrentLocation);


		foreach (var item in GeoDatos!.entries)
		{
			var _marker = CreateGeoMarker(item, GeoDatos.title , GeoDatos.link);
			_map.AddLayer(_marker);
		}
		var point = new PointF( location.Lat,location.Lng);
		_map.PanTo(position:point, animate: true, duration: 10f);
		await base.OnInitializedAsync();



	}

	private Marker CreateGeoMarker(Entry item, string titulo, string enlace)
	{

		var _lat = float.Parse(item.geolat!, CultureInfo.InvariantCulture);
		var _long = float.Parse(item.geolong! , CultureInfo.InvariantCulture);

		var _location = new LatLng() { Lat = _lat , Lng = _long }; 
		var _marker = new Marker(_location)
        {		
            Title = titulo,
            Popup = new Popup { Content = string.Format("Info: {0} \n Enlace: {1}", item.title, enlace ) }
            //Tooltip = new Tooltip { Content = "Tu dispositivo esta aquí!" }

        };
		return _marker;
	}
	private void ShowDialogError(GeolocationResult geolocalizacion)
    {
        var parameters = new DialogParameters();
        parameters.Add("Contenido", string.Format("Error en la Geolocalizacón del dispositivo: {0}-{1}",
            geolocalizacion.Error.CodeEnum.ToString(), geolocalizacion.Error.Message));
        parameters.Add("Color", MudBlazor.Color.Error);
        parameters.Add("TextoBoton", "Ok");
			dialogService.Show<DialogoComponent>("Información", parameters);

	}


	
}
